<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap Min CSS -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <!-- Animate CSS -->
    <link rel="stylesheet" href="/css/animate.css">
    <!-- IcoFont Min CSS -->
    <link rel="stylesheet" href="/css/icofont.min.css">
    <!-- Meanmenu Min CSS -->
    <link rel="stylesheet" href="/css/meanmenu.css">
    <!-- Magnific Popup Min CSS -->
    <link rel="stylesheet" href="/css/magnific-popup.min.css">
    <!-- Owl Carousel Min CSS -->
    <link rel="stylesheet" href="/css/owl.carousel.min.css">
    <!-- NiceSelect Min CSS -->
    <link rel="stylesheet" href="/css/nice-select.css">
    <!-- Style CSS -->
    <link rel="stylesheet" href="/css/style.css">
    <!-- Responsive CSS -->
    <link rel="stylesheet" href="/css/responsive.css">

    <title><%= title %></title>

    <link rel="icon" type="image/png" href="/img/favicon.png">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
</head>

<body>

<!-- Start Navbar Area -->
<header id="header">
    <div class="crake-nav">
        <div class="container">
            <nav class="navbar navbar-expand-md navbar-light">
                <a class="navbar-brand" href="/"><img src="/img/logo.svg" alt="logo"></a>
            </nav>
        </div>
    </div>
</header>
<!-- End Navbar Area -->

<section class="blog-area ptb-100">
    <div class="container">
        <h1 style="color: white; font-weight: bold">Blockchain and Financial Computing</h1>
        <p style="margin: 15px 0; color: #cdc8df">2021.06.08</p>
        <img src="/img/article01.png" style="margin-bottom:15px;">
        <p>
            The main topic of the blockchain and finance industry is blending cryptocurrency into a profitable finance
            business inside the frame of the law. We should think about what would be required if one starts a block
            chain based internet bank similar to 'Kakao bank'. </p>
        <p>
            Internet banks do not have stores. They only need call centers, computer systems and legal requirements.
            Then, what do we need to build a bank computer system? First, we will need a computer. Many would suppose
            that the computer should be large and highly-efficient. We call this a high performance large capacity
            server. A professional software programmer or developer who is knowledgeable in finance will be needed.
            Today's bank computer system includes network equipment, server, storage, hardware(HW) and various security
            programs(SW). Experts of each field or professional HW·SW companies must be involved in the bank's computer
            system. </p>
        <p>
            Cryptocurrency based Internet banks do not handle stores and bills, therefore they do not require ATMs,
            computer peripherals and accessories. As verification based on private keys that are created by block chain
            is used, authentication certificates and electronic signature will not be needed. Block chain systems, which
            is the root constituent of Internet banks, do not need firewalls and is safe from hacking. Vaccines or
            physical security equipment and logical security solutions are unnecessary, only small scale groupware
            systems and solutions will be needed. Vaccines and network security systems should be minimized. The whole
            organization is simplified. Of course, other minimized server, storage, database(DB) will still be used.
            What about human resources? Let's assume that we are developing a cryptocurrency based Internet bank called
            "Tony Bank", using the second generation block chain platform as Ethereum. What kind of process should be
            followed? Total system analysis, planning > network planning, security reviewing > storyboard writing >
            prototyping based on storyboard > data structure, transaction planning > contract planning > smart contract
            visualizing based on the contract > client programming > server, API programming > operating environment
            forming > testing and distributing > operating total system. </p>
        <p>
            By checking the process from A to K, we can realize that it is not that different from the traditional
            business information system methodology. It is able to develop by hiring existing SW developers. The only
            problem is that the block chain is unfamiliar to most people. To easily blend in the block chain with the
            computer system, understanding an exercise would be helpful. The process required for developing an Ethereum
            based application, which receives credit loan from and pays monthly interest to Tony Bank, will be depicted
            as below. </p>
        <p>
            Process instruction and application·frond-end design > application·front-end programming > Ethereum account
            issue back-end API > block chain programming - smart contract writing followed by loan, interest payment,
            repayment schedules > loaning back-end API > Ethereum program distributing > application distributing and
            API server implementing </p>
        <p>
            Step 4 seems like a completely new, but it is actually similar to the DB programming representative existing
            query. For step 4, Ethereum provides a new Java-Script based programming language called "Solidity". On the
            contrary, step 3 and step 5 may require more block chain knowledge, background and system implementing
            know-how. To commercialize 'Tony Bank', not only would Ethereum be applied, but also various kinds of block
            chain platforms and cryptocurrencies would be applied. However, this is just an example of applying block
            chain to simple tasks to help understand the function of financial computer system. If you want to discuss
            about different applications and more specific parts, the door of the block chain world is widely opened.
            All you have to do is find a close expert to discuss with. </p>

    </div>
</section>
<!-- Jquery Min JS -->
<script src="/js/jquery.min.js"></script>
<!-- Popper Min JS -->
<script src="/js/popper.min.js"></script>
<!-- Bootstrap Min JS -->
<script src="/js/bootstrap.min.js"></script>
<!-- Canvas Min JS -->
<script src="/js/canvas.min.js"></script>
<!-- Meanmenu Min JS -->
<script src="/js/jquery.meanmenu.min.js"></script>
<!-- WOW Min JS -->
<script src="/js/wow.min.js"></script>
<!-- Tilt Min JS -->
<script src="/js/tilt.jquery.min.js"></script>
<!-- Magnific Popup Min JS -->
<script src="/js/jquery.magnific-popup.min.js"></script>
<!-- Owl Carousel Min JS -->
<script src="/js/owl.carousel.min.js"></script>
<!-- Waypoints Min Js -->
<script src="/js/waypoints.min.js"></script>
<!-- Jquery CounterUp Min JS -->
<script src="/js/jquery.counterup.min.js"></script>
<!-- NiceSelect Min Js -->
<script src="/js/jquery.nice-select.min.js"></script>
<!-- ajaxChimp Min JS -->
<script src="/js/jquery.ajaxchimp.min.js"></script>
<!-- Form Validator Min JS -->
<script src="/js/form-validator.min.js"></script>
<!-- Contact Form Min JS -->
<script src="/js/contact-form-script.js"></script>
<!-- Main JS -->
<script src="/js/main.js"></script>
</body>
</html>
